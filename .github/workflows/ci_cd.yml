# .github/workflows/docker-build.yml
name: CI/CD Pipeline # 工作流名称

env:
  REGISTRY: ccr.ccs.tencentyun.com
  NAMESPACE: wyj_docker
  # NAMESPACE: ${{ secrets.TENCENT_NAMESPACE }}
  IMAGE_NAME: ${{ github.event.repository.name }}

on: # 触发条件
  push:
    branches: ["main"] # main分支提交时触发
  pull_request:
    branches: ["main"]

jobs: # 定义任务
  build-and-test: # 任务ID
    runs-on: ubuntu-latest # 运行环境
    steps:
      # 步骤1：检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤2：登录腾讯云容器镜像服务
      - name: Log in to Tencent Cloud CCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          # username: ${{ secrets.TENCENT_CLOUD_USERNAME }}
          # password: ${{ secrets.TENCENT_CLOUD_PASSWORD }}
          username: 100032858376
          password: 15059775613w

      # 步骤3：设置构建元数据
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=short

      # 步骤4：构建并推送镜像（支持缓存）
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile # 指定Dockerfile路径
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ steps.meta.outputs.tags }}
          cache-to: type=registry,ref=${{ steps.meta.outputs.tags }},mode=max